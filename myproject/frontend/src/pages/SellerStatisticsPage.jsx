import React, { useEffect, useState } from "react";
import { Bar, Line, Pie } from "react-chartjs-2";
import {
  Chart,
  CategoryScale,
  LinearScale,
  LineController,
  LineElement,
  BarController,
  BarElement,
  PointElement,
  Title,
  Tooltip,
  Legend,
  ArcElement,
} from "chart.js";
import axios from "axios";
import { useAuth } from "../AuthContext";
import {
  Container,
  Grid,
  Paper,
  Typography,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
} from "@mui/material";
import Header from "../components/Header";

Chart.register(
  CategoryScale,
  LinearScale,
  LineController,
  LineElement,
  BarController,
  BarElement,
  PointElement,
  Title,
  Tooltip,
  Legend,
  ArcElement
);

const SellerDashboard = () => {
  const [stats, setStats] = useState(null);
  const { token } = useAuth();

  useEffect(() => {
    const fetchStats = async () => {
      try {
        const response = await axios.get("/api/seller-statistics/", {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        });
        setStats(response.data);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", error);
      }
    };
    fetchStats();
  }, [token]);

  if (!stats)
    return (
      <div className="text-center py-10 text-gray-600 dark:text-gray-400">
        –ó–∞–≥—Ä—É–∑–∫–∞...
      </div>
    );

  const formatNumber = (num) =>
    num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");

  const statusMap = {
    processing: "–í –æ–±—Ä–∞–±–æ—Ç–∫–µ",
    confirmed: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω",
    shipped: "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω",
    in_transit: "–í –ø—É—Ç–∏",
    delivered: "–î–æ—Å—Ç–∞–≤–ª–µ–Ω",
    canceled: "–û—Ç–º–µ–Ω–µ–Ω",
  };

  const categorySalesData = {
    labels: stats.category_sales.map((c) => c.name),
    datasets: [
      {
        label: "–í—ã—Ä—É—á–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º",
        data: stats.category_sales.map((c) => c.total_revenue),
        backgroundColor: [
          "#FF6384",
          "#36A2EB",
          "#FFCE56",
          "#4BC0C0",
          "#9966FF",
        ],
      },
    ],
  };

  const salesByDayOfWeekData = {
    labels: ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"],
    datasets: [
      {
        label: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤",
        data: stats.sales_by_day_of_week.map((d) => d.order_count),
        backgroundColor: "#2196F3",
      },
    ],
  };

  const orderStatusesData = {
    labels: stats.order_statuses.map((s) => statusMap[s.status] || s.status),
    datasets: [
      {
        label: "–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤",
        data: stats.order_statuses.map((s) => s.count),
        backgroundColor: [
          "#4CAF50",
          "#FFC107",
          "#FF5722",
          "#9C27B0",
          "#2196F3",
        ],
      },
    ],
  };

  const deliveryPickupData = {
    labels: stats.delivery_pickup_stats.map((d) =>
      d.delivery_type === "delivery" ? "–î–æ—Å—Ç–∞–≤–∫–∞" : "–°–∞–º–æ–≤—ã–≤–æ–∑"
    ),
    datasets: [
      {
        label: "–î–æ—Å—Ç–∞–≤–∫–∞ –∏ —Å–∞–º–æ–≤—ã–≤–æ–∑",
        data: stats.delivery_pickup_stats.map((d) => d.count),
        backgroundColor: ["#FF9800", "#8BC34A"],
      },
    ],
  };

  const paymentMethodsData = {
    labels: stats.payment_method_stats.map((p) =>
      p.payment_method === "card" ? "–ö–∞—Ä—Ç–æ–π" : "–ù–∞–ª–∏—á–Ω—ã–µ"
    ),
    datasets: [
      {
        label: "–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã",
        data: stats.payment_method_stats.map((p) => p.count),
        backgroundColor: ["#9C27B0", "#3F51B5"],
      },
    ],
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 dark:from-gray-900 dark:to-gray-800">
      <style>{`
        @keyframes wave-group {
          0% { transform: scale(0.3); opacity: 1; }
          90% { transform: scale(1.6); opacity: 0; }
          100% { transform: scale(1.6); opacity: 0; }
        }
        .animate-wave-1 { animation: wave-group 2s ease-out infinite; }
        .animate-wave-2 { animation: wave-group 2s ease-out infinite 0.3s; }
        .animate-wave-3 { animation: wave-group 2s ease-out infinite 0.6s; }
      `}</style>
      <Header />
      <Container maxWidth="lg" className="py-8">
        <Typography
          variant="h4"
          className="text-center text-gray-800 dark:text-white mb-8"
        >
          üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞
        </Typography>

        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
        <Grid container spacing={3} className="mb-8">
          {[
            {
              title: "–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤",
              value: formatNumber(stats.orders.total_orders),
              icon: "üì¶",
              color: "blue",
            },
            {
              title: "–û–±—â–∏–π –¥–æ—Ö–æ–¥",
              value: `${formatNumber(stats.orders.total_revenue.toFixed(2))} ‚ÇΩ`,
              icon: "üí∞",
              color: "green",
            },
            {
              title: "–ü—Ä–æ–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤",
              value: formatNumber(stats.orders.total_quantity),
              icon: "üõí",
              color: "purple",
            },
          ].map((metric, index) => (
            <Grid item xs={12} sm={4} key={index}>
              <Paper className="p-6 text-center bg-white dark:bg-gray-800 shadow-md rounded-lg transform transition hover:scale-105">
                <div className="relative inline-block mb-4">
                  <div
                    className={`absolute w-12 h-12 rounded-full border-2 border-${metric.color}-500 animate-wave-1 opacity-0 z-0`}
                  />
                  <div
                    className={`absolute w-12 h-12 rounded-full border-2 border-${metric.color}-500 animate-wave-2 opacity-0 z-0`}
                  />
                  <div
                    className={`absolute w-12 h-12 rounded-full border-2 border-${metric.color}-500 animate-wave-3 opacity-0 z-0`}
                  />
                  <div className="text-4xl relative z-10">{metric.icon}</div>
                </div>
                <Typography
                  variant="h6"
                  className="text-gray-600 dark:text-gray-300"
                >
                  {metric.title}
                </Typography>
                <Typography
                  variant="h3"
                  className={`font-bold text-${metric.color}-600 dark:text-${metric.color}-400`}
                >
                  {metric.value}
                </Typography>
              </Paper>
            </Grid>
          ))}
        </Grid>

        {/* –ì—Ä–∞—Ñ–∏–∫–∏ –∏ —Ç–∞–±–ª–∏—Ü—ã */}
        <Grid container spacing={3}>
          <Grid item xs={12} md={6}>
            <Paper className="p-6 bg-white dark:bg-gray-800 shadow-md rounded-lg">
              <Typography
                variant="h6"
                className="text-gray-800 dark:text-white mb-4"
              >
                –ï–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏
              </Typography>
              <div style={{ height: "300px" }}>
                <Line
                  data={{
                    labels: stats.monthly_stats.map((m) =>
                      new Date(m.month).toLocaleString("ru-RU", {
                        month: "short",
                      })
                    ),
                    datasets: [
                      {
                        label: "–î–æ—Ö–æ–¥ (—Ä—É–±)",
                        data: stats.monthly_stats.map((m) => m.revenue),
                        borderColor: "#4CAF50",
                        borderWidth: 2,
                        fill: false,
                      },
                    ],
                  }}
                  options={{ responsive: true, maintainAspectRatio: false }}
                />
              </div>
            </Paper>
          </Grid>

          <Grid item xs={12} md={6}>
            <Paper className="p-6 bg-white dark:bg-gray-800 shadow-md rounded-lg">
              <Typography
                variant="h6"
                className="text-gray-800 dark:text-white mb-4"
              >
                –¢–æ–ø —Ç–æ–≤–∞—Ä–æ–≤
              </Typography>
              <div style={{ height: "300px" }}>
                <Bar
                  data={{
                    labels: stats.products.map((p) => p.product__name),
                    datasets: [
                      {
                        label: "–ü—Ä–æ–¥–∞–Ω–æ –µ–¥–∏–Ω–∏—Ü",
                        data: stats.products.map((p) => p.total_sold),
                        backgroundColor: "#2196F3",
                      },
                    ],
                  }}
                  options={{ responsive: true, maintainAspectRatio: false }}
                />
              </div>
            </Paper>
          </Grid>

          <Grid item xs={12} md={6}>
            <Paper className="p-6 bg-white dark:bg-gray-800 shadow-md rounded-lg">
              <Typography
                variant="h6"
                className="text-gray-800 dark:text-white mb-4"
              >
                –ü–∏–∫–æ–≤—ã–µ —á–∞—Å—ã –∑–∞–∫–∞–∑–æ–≤
              </Typography>
              <div style={{ height: "300px" }}>
                <Bar
                  data={{
                    labels: stats.peak_hours.map((h) => `${h.hour}:00`),
                    datasets: [
                      {
                        label: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤",
                        data: stats.peak_hours.map((h) => h.order_count),
                        backgroundColor: "#FF9800",
                      },
                    ],
                  }}
                  options={{ responsive: true, maintainAspectRatio: false }}
                />
              </div>
            </Paper>
          </Grid>

          <Grid item xs={12} md={6}>
            <Paper className="p-6 bg-white dark:bg-gray-800 shadow-md rounded-lg">
              <Typography
                variant="h6"
                className="text-gray-800 dark:text-white mb-4"
              >
                –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
              </Typography>
              <div style={{ height: "300px" }}>
                <Pie
                  data={categorySalesData}
                  options={{ responsive: true, maintainAspectRatio: false }}
                />
              </div>
            </Paper>
          </Grid>

          <Grid item xs={12} md={6}>
            <Paper className="p-6 bg-white dark:bg-gray-800 shadow-md rounded-lg">
              <Typography
                variant="h6"
                className="text-gray-800 dark:text-white mb-4"
              >
                –ó–∞–∫–∞–∑—ã –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
              </Typography>
              <div style={{ height: "300px" }}>
                <Bar
                  data={salesByDayOfWeekData}
                  options={{ responsive: true, maintainAspectRatio: false }}
                />
              </div>
            </Paper>
          </Grid>

          <Grid item xs={12} md={6}>
            <Paper className="p-6 bg-white dark:bg-gray-800 shadow-md rounded-lg">
              <Typography
                variant="h6"
                className="text-gray-800 dark:text-white mb-4"
              >
                –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤
              </Typography>
              <div style={{ height: "300px" }}>
                <Pie
                  data={orderStatusesData}
                  options={{ responsive: true, maintainAspectRatio: false }}
                />
              </div>
            </Paper>
          </Grid>

          <Grid item xs={12} md={6}>
            <Paper className="p-6 bg-white dark:bg-gray-800 shadow-md rounded-lg">
              <Typography
                variant="h6"
                className="text-gray-800 dark:text-white mb-4"
              >
                –î–æ—Å—Ç–∞–≤–∫–∞ –∏ —Å–∞–º–æ–≤—ã–≤–æ–∑
              </Typography>
              <div style={{ height: "300px" }}>
                <Pie
                  data={deliveryPickupData}
                  options={{ responsive: true, maintainAspectRatio: false }}
                />
              </div>
            </Paper>
          </Grid>

          <Grid item xs={12} md={6}>
            <Paper className="p-6 bg-white dark:bg-gray-800 shadow-md rounded-lg">
              <Typography
                variant="h6"
                className="text-gray-800 dark:text-white mb-4"
              >
                –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
              </Typography>
              <div style={{ height: "300px" }}>
                <Pie
                  data={paymentMethodsData}
                  options={{ responsive: true, maintainAspectRatio: false }}
                />
              </div>
            </Paper>
          </Grid>

          <Grid item xs={12}>
            <Paper className="p-6 bg-white dark:bg-gray-800 shadow-md rounded-lg">
              <Typography
                variant="h6"
                className="text-gray-800 dark:text-white mb-4"
              >
                –û—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–æ–≤
              </Typography>
              <Typography
                variant="body1"
                className="text-gray-600 dark:text-gray-300 mb-4"
              >
                –í—Å–µ–≥–æ –æ—Ç–º–µ–Ω: {stats.cancellation_stats.total_cancellations}
              </Typography>
              <TableContainer>
                <Table>
                  <TableHead>
                    <TableRow>
                      <TableCell className="text-gray-800 dark:text-white">
                        –ü—Ä–∏—á–∏–Ω–∞
                      </TableCell>
                      <TableCell className="text-gray-800 dark:text-white">
                        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
                      </TableCell>
                    </TableRow>
                  </TableHead>
                  <TableBody>
                    {stats.cancellation_stats.reasons.map((reason, index) => (
                      <TableRow key={index}>
                        <TableCell className="text-gray-600 dark:text-gray-300">
                          {reason.cancel_reason || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}
                        </TableCell>
                        <TableCell className="text-gray-600 dark:text-gray-300">
                          {reason.count}
                        </TableCell>
                      </TableRow>
                    ))}
                  </TableBody>
                </Table>
              </TableContainer>
            </Paper>
          </Grid>

          <Grid item xs={12} md={6}>
            <Paper className="p-6 text-center bg-white dark:bg-gray-800 shadow-md rounded-lg">
              <Typography
                variant="h6"
                className="text-gray-800 dark:text-white mb-4"
              >
                –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥
              </Typography>
              <Typography
                variant="h2"
                className="text-purple-600 dark:text-purple-400 font-bold"
              >
                {stats.review_stats.average_rating.toFixed(1)}/5
              </Typography>
              <Typography
                variant="body1"
                className="text-gray-600 dark:text-gray-300"
              >
                –û—Ç–∑—ã–≤–æ–≤: {stats.review_stats.total_reviews}
              </Typography>
            </Paper>
          </Grid>

          {/* –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å–µ–∫—Ü–∏—è: –ü–æ–∫—É–ø–∞—Ç–µ–ª–∏ –∏ –∏—Ö –ø–æ–∫—É–ø–∫–∏ */}
          <Grid item xs={12}>
            <Paper className="p-6 bg-white dark:bg-gray-800 shadow-md rounded-lg">
              <Typography
                variant="h6"
                className="text-gray-800 dark:text-white mb-4"
              >
                –ü–æ–∫—É–ø–∞—Ç–µ–ª–∏ –∏ –∏—Ö –ø–æ–∫—É–ø–∫–∏
              </Typography>
              <TableContainer>
                <Table>
                  <TableHead>
                    <TableRow>
                      <TableCell className="text-gray-800 dark:text-white">
                        –ü–æ–∫—É–ø–∞—Ç–µ–ª—å
                      </TableCell>
                      <TableCell className="text-gray-800 dark:text-white">
                        –î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞
                      </TableCell>
                      <TableCell className="text-gray-800 dark:text-white">
                        –¢–∏–ø –æ–ø–ª–∞—Ç—ã
                      </TableCell>
                      <TableCell className="text-gray-800 dark:text-white">
                        –¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏
                      </TableCell>
                      <TableCell className="text-gray-800 dark:text-white">
                        –°—É–º–º–∞
                      </TableCell>
                      <TableCell className="text-gray-800 dark:text-white">
                        –¢–æ–≤–∞—Ä—ã
                      </TableCell>
                      <TableCell className="text-gray-800 dark:text-white">
                        –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
                      </TableCell>
                    </TableRow>
                  </TableHead>
                  <TableBody>
                    {stats.customer_purchases &&
                      stats.customer_purchases.map((purchase, index) => (
                        <TableRow key={index}>
                          <TableCell className="text-gray-600 dark:text-gray-300">
                            {purchase.first_name} {purchase.last_name} (
                            {purchase.email})
                          </TableCell>
                          <TableCell className="text-gray-600 dark:text-gray-300">
                            {new Date(purchase.order_date).toLocaleString(
                              "ru-RU"
                            )}
                          </TableCell>
                          <TableCell className="text-gray-600 dark:text-gray-300">
                            {purchase.payment_method === "card"
                              ? "–ö–∞—Ä—Ç–æ–π"
                              : "–ù–∞–ª–∏—á–Ω—ã–µ"}
                          </TableCell>
                          <TableCell className="text-gray-600 dark:text-gray-300">
                            {purchase.delivery_type === "delivery"
                              ? "–î–æ—Å—Ç–∞–≤–∫–∞"
                              : "–°–∞–º–æ–≤—ã–≤–æ–∑"}
                          </TableCell>
                          <TableCell className="text-gray-600 dark:text-gray-300">
                            {purchase.total_spent.toFixed(2)} ‚ÇΩ
                          </TableCell>
                          <TableCell className="text-gray-600 dark:text-gray-300">
                            <ul>
                              {purchase.items.map((item, idx) => (
                                <li key={idx}>
                                  {item.product_name} x{item.quantity} -{" "}
                                  {item.total.toFixed(2)} ‚ÇΩ
                                </li>
                              ))}
                            </ul>
                          </TableCell>
                          <TableCell className="text-gray-600 dark:text-gray-300">
                            {statusMap[purchase.status] || purchase.status}
                          </TableCell>
                        </TableRow>
                      ))}
                  </TableBody>
                </Table>
              </TableContainer>
            </Paper>
          </Grid>
        </Grid>
      </Container>
    </div>
  );
};

export default SellerDashboard;
